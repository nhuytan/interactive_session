<tool id='NA' name='NA'>
  <command interpreter='bash'>main.sh</command>
  <cancel interpreter='bash'>kill.sh</cancel>
  <inputs>
   <section name='service' type='section' title='Jupyter Notebook Settings' expanded='true'>
    <param 
      name='name' 
      label='Service' 
      type='hidden' 
      value='jupyter-host'  
    ></param>
   	<param 
      name='notebook_dir' 
      label='Directory to start Jupyter GUI' 
      type='text' 
      value='__WORKDIR__' 
      help='This is the directory that you start with when the JupyterHub graphical user interface starts. The default value here is your home directory.'
    ></param>
    <param 
      name="conda_install" 
      type="boolean" 
      truevalue="Yes" 
      falsevalue="No" 
      checked="True" 
      label="Install miniconda if not there?" 
      help='Select Yes to install Jupyter in miniconda environment and No to load an existing python environment '
      float="right"
    ></param>
    <param 
      name='conda_sh' 
      label='Path to conda environment' 
      type='text' 
      value='__WORKDIR__/pw/.miniconda/etc/profile.d/conda.sh' 
      help='Path to use in source /path/to/conda.sh'
      show_if='service.conda_install'
    ></param>
    <param 
      name='conda_env' 
      label='Conda environment (recommended: base)' 
      type='text' 
      value='base' 
      help='Environment to active. The base environment enables changing kernel to other environments!'
      show_if='service.conda_install'
    ></param>
    <param 
      name='load_env' 
      label='Command to load Jupyter' 
      type='text' 
      value='source __WORKDIR__/pw/.miniconda/etc/profile.d/conda.sh; conda activate base' 
      help='To load the environment, enter the appropriate command, for example: module load module-name or source path/to/env.sh.'
      depends_on='service.conda_install'
    ></param>
    <param name='install_instructions' 
      show_if='service.conda_install'
      type='select' 
      label='Select Jupyter Notebook Installation' 
      multiple='false'>
        <option value="latest">Latest default versions of Jupyter Notebook and Python (not thoroughly tested)</option>
        <option value="notebook7.0.8-python3.12.1" selected="true">Jupyter Notebook 7.0.8 with Python version 3.12.1</option>
        <option value="notebook6.5.4-python3.9.18">Jupyter Notebook 6.5.4 with Python version 3.9.18</option>
        <option value="yaml">Provide custom Conda environment YAML file</option>
    </param>
    <param
        name='yaml' 
        label='Paste Conda Environment Defition YAML' 
        type='textarea' 
        value='' 
        help='Copy and paste a custom Conda environment definition YAML file'
        show_if="yaml"
        depends_on='service.install_instructions'
    ></param>
    <param 
      name='password' 
      label='Password for notebook session' 
      type='hidden' 
      value='' 
      help='Enter password or leave blank for no password'  
    ></param>
   </section>
   <section name='pwrl_host' type='section' title='Jupyter Server Host' expanded='true'>
    <param 
      name='resource' 
      type='computeResource' 
      label='Service host' 
      help='Resource to host the service'
    ></param>
    <param
     name='nports' 
     label='Number of Ports to Reserve' 
     type='hidden' 
     value='1'  
    ></param> 
    <param 
      name='jobschedulertype' 
      type='select' 
      label='Select Controller, SLURM Partition or PBS Queue' 
      help='Job will submitted using SSH, sbatch or qsub, respectively'   
      multiple='false'>
        <option value="CONTROLLER" selected="true">Controller</option>
        <option value="SLURM">SLURM Partition</option>
        <option value="PBS">PBS Queue</option>
        <option value="LOCAL">PW USER CONTAINER</option>
    </param>
    <param 
      name='_sch__dd_partition_e_' 
      label='SLURM partition' 
      type='dynamicPartitionDropdown' 
      resource='pwrl_host.resource'
      help='Partition to submit the interactive job. Leave empty to let SLURM pick the optimal option.' 
      depends_on='pwrl_host.jobschedulertype'
      show_if='SLURM'
      optional='true'   
    ></param>
    <param 
      name='scheduler_directives_slurm' 
      label='Scheduler directives' 
      type='text' 
      help='e.g. --mem=1000;--gpus-per-node=1 - Use the semicolon character ; to separate parameters. Do not include the SBATCH keyword.' 
      value=''
      depends_on='pwrl_host.jobschedulertype'
      show_if='SLURM'
      optional='true' 
    ></param>
    <param 
      name='_sch__d_q___' 
      label='PBS queue' 
      type='text' 
      help='Queue to submit the interactive job. Must select one! Use [qstat -f -Q] to list all queues on the system' 
      value=''  
      depends_on='pwrl_host.jobschedulertype'
      show_if='PBS'
    ></param>
    <param 
      name='scheduler_directives_pbs' 
      label='Scheduler directives' 
      type='text' 
      help='e.g. -l mem=1000;-l nodes=1:ppn=4 - Use the semicolon character ; to separate parameters. Do not include the PBS keyword.' 
      value=''
      depends_on='pwrl_host.jobschedulertype'
      show_if='PBS'
      optional='true'   
    ></param>
   </section>
  </inputs>
</tool>
